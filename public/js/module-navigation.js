// Script para navegaci√≥n entre m√≥dulos
console.log('=== M√ìDULO DE NAVEGACI√ìN CARGADO ===');

// Funci√≥n global para cambiar m√≥dulos
window.changeModule = function(direction) {
  console.log('=== CAMBIO DE M√ìDULO INICIADO ===');
  console.log('Direcci√≥n:', direction);
  
  // Obtener el √≠ndice actual de la URL
  const urlParams = new URLSearchParams(window.location.search);
  const currentModule = parseInt(urlParams.get('module')) || 0;
  
  console.log('M√≥dulo actual:', currentModule);
  
  // Calcular nuevo √≠ndice
  const newModule = currentModule + direction;
  console.log('Nuevo m√≥dulo:', newModule);
  
  // Verificar l√≠mites (asumimos m√°ximo 10 m√≥dulos por ahora)
  if (newModule < 0 || newModule > 9) {
    console.log('‚ùå Fuera de l√≠mites');
    return;
  }
  
  // Crear nueva URL
  const newUrl = new URL(window.location);
  newUrl.searchParams.set('module', newModule);
  
  console.log('üîÑ Redirigiendo a:', newUrl.toString());
  window.location.href = newUrl.toString();
};

// Configurar event listeners cuando el DOM est√© listo
document.addEventListener('DOMContentLoaded', function() {
  console.log('=== CONFIGURANDO NAVEGACI√ìN ===');
  
  const prevBtn = document.getElementById('prevModuleBtn');
  const nextBtn = document.getElementById('nextModuleBtn');
  
  console.log('Bot√≥n anterior:', prevBtn);
  console.log('Bot√≥n siguiente:', nextBtn);
  
  if (prevBtn) {
    prevBtn.addEventListener('click', function(e) {
      e.preventDefault();
      console.log('üñ±Ô∏è Bot√≥n anterior clickeado');
      window.changeModule(-1);
    });
  }
  
  if (nextBtn) {
    nextBtn.addEventListener('click', function(e) {
      e.preventDefault();
      console.log('üñ±Ô∏è Bot√≥n siguiente clickeado');
      window.changeModule(1);
    });
  }
  
  console.log('=== NAVEGACI√ìN CONFIGURADA ===');
});

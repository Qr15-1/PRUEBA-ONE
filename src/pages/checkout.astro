---
import Layout from '../layouts/Layout.astro';
import { userQueries, courseQueries } from '../lib/database.js';

// Verificar si el usuario est√° autenticado
const userSession = Astro.cookies.get('user_session')?.value;

if (!userSession) {
  return Astro.redirect('/login');
}

// Obtener datos del usuario
const user = userQueries.findBySessionToken(userSession);
if (!user) {
  return Astro.redirect('/login');
}

// Obtener cursos del carrito desde localStorage (esto se manejar√° en el frontend)
// Por ahora creamos una estructura b√°sica
---

<Layout title="Checkout - RojasFitt" description="Finaliza tu compra de cursos de fitness">
  <section class="checkout-page">
    <div class="checkout-container">
      
      <!-- Header de la p√°gina -->
      <div class="checkout-header">
        <div class="checkout-breadcrumb">
          <a href="/">Inicio</a>
          <span>/</span>
          <a href="/cursos">Cursos</a>
          <span>/</span>
          <span>Checkout</span>
        </div>
        
        <div class="checkout-title-section">
          <h1 class="checkout-title">Finalizar <span class="highlight-green">Compra</span></h1>
          <p class="checkout-subtitle">Confirma tus cursos y completa el pago</p>
        </div>
      </div>

      <!-- Contenido principal del checkout -->
      <div class="checkout-content">
        
        <!-- Columna izquierda - Formulario de pago -->
        <div class="checkout-main">
          
          <!-- Informaci√≥n del cliente -->
          <div class="checkout-section">
            <h2 class="section-title">
              <span class="section-icon">üë§</span>
              Informaci√≥n del Cliente
            </h2>
            <div class="client-info">
              <div class="info-item">
                <span class="info-label">Nombre:</span>
                <span class="info-value" id="clientName">{user.first_name} {user.last_name}</span>
              </div>
              <div class="info-item">
                <span class="info-label">Email:</span>
                <span class="info-value" id="clientEmail">{user.email}</span>
              </div>
              <div class="info-item">
                <span class="info-label">Tel√©fono:</span>
                <span class="info-value" id="clientPhone">{user.phone || 'No proporcionado'}</span>
              </div>
            </div>
          </div>

          <!-- M√©todo de pago -->
          <div class="checkout-section">
            <h2 class="section-title">
              <span class="section-icon">üí≥</span>
              M√©todo de Pago
            </h2>
            
            <div class="payment-methods">
              <div class="payment-method active" data-method="binance">
                <div class="payment-icon">‚Çø</div>
                <div class="payment-info">
                  <h3>Binance Pay</h3>
                  <p>Pago con criptomonedas - BSC Network</p>
                </div>
                <div class="payment-check">‚úì</div>
              </div>
              
              <div class="payment-method" data-method="paypal">
                <div class="payment-icon">üÖøÔ∏è</div>
                <div class="payment-info">
                  <h3>PayPal</h3>
                  <p>Pago tradicional - Red segura</p>
                </div>
                <div class="payment-check">‚úì</div>
              </div>
              
              <div class="payment-method" data-method="mobile">
                <div class="payment-icon">üì±</div>
                <div class="payment-info">
                  <h3>Pago M√≥vil</h3>
                  <p>Transferencia bancaria - Red nacional</p>
                </div>
                <div class="payment-check">‚úì</div>
              </div>
            </div>

            <!-- Datos de Binance -->
            <div class="payment-form" id="binanceForm">
              <div class="payment-info-card">
                <div class="payment-header">
                  <h3>üìã Datos para Binance Pay</h3>
                  <p class="tech-info">Tecnolog√≠a: BSC Network (Binance Smart Chain)</p>
                </div>
                
                <div class="payment-details">
                  <div class="detail-item">
                    <label>Direcci√≥n de Wallet:</label>
                    <div class="copy-field">
                      <span class="wallet-address">0x742d35Cc6634C0532925a3b8D8C2E3C1a4c8e2f9</span>
                      <button class="copy-btn" onclick="copyToClipboard('0x742d35Cc6634C0532925a3b8D8C2E3C1a4c8e2f9')">üìã</button>
                    </div>
                  </div>
                  
                  <div class="detail-item">
                    <label>Moneda:</label>
                    <span class="detail-value">USDT (BEP-20)</span>
                  </div>
                  
                  <div class="detail-item">
                    <label>Red:</label>
                    <span class="detail-value">BSC (Binance Smart Chain)</span>
                  </div>
                  
                  <div class="detail-item">
                    <label>Monto a enviar:</label>
                    <span class="detail-value total-amount" id="binanceAmount">$0.00</span>
                  </div>
                </div>
                
                <div class="payment-instructions">
                  <h4>üìù Instrucciones:</h4>
                  <ol>
                    <li>Copia la direcci√≥n de wallet haciendo clic en üìã</li>
                    <li>Abre Binance Pay en tu dispositivo</li>
                    <li>Env√≠a exactamente el monto mostrado en USDT (BEP-20)</li>
                    <li>Confirma la transacci√≥n en Binance</li>
                    <li>Haz clic en "Ya pagu√©" y espera confirmaci√≥n</li>
                  </ol>
                </div>
              </div>
            </div>

            <!-- Datos de PayPal -->
            <div class="payment-form" id="paypalForm" style="display: none;">
              <div class="payment-info-card">
                <div class="payment-header">
                  <h3>üìã Datos para PayPal</h3>
                  <p class="tech-info">Tecnolog√≠a: PayPal API v2.0 - Red segura SSL/TLS</p>
                </div>
                
                <div class="payment-details">
                  <div class="detail-item">
                    <label>Email de PayPal:</label>
                    <div class="copy-field">
                      <span class="paypal-email">pagos@rojasfitt.com</span>
                      <button class="copy-btn" onclick="copyToClipboard('pagos@rojasfitt.com')">üìã</button>
                    </div>
                  </div>
                  
                  <div class="detail-item">
                    <label>Concepto:</label>
                    <span class="detail-value">Cursos RojasFitt</span>
                  </div>
                  
                  <div class="detail-item">
                    <label>Monto a enviar:</label>
                    <span class="detail-value total-amount" id="paypalAmount">$0.00</span>
                  </div>
                </div>
                
                <div class="payment-instructions">
                  <h4>üìù Instrucciones:</h4>
                  <ol>
                    <li>Copia el email de PayPal haciendo clic en üìã</li>
                    <li>Abre PayPal en tu navegador o app</li>
                    <li>Env√≠a el pago al email copiado</li>
                    <li>Incluye "Cursos RojasFitt" en el concepto</li>
                    <li>Haz clic en "Ya pagu√©" y espera confirmaci√≥n</li>
                  </ol>
                </div>
              </div>
            </div>

            <!-- Datos de Pago M√≥vil -->
            <div class="payment-form" id="mobileForm" style="display: none;">
              <div class="payment-info-card">
                <div class="payment-header">
                  <h3>üìã Datos para Pago M√≥vil</h3>
                  <p class="tech-info">Tecnolog√≠a: Pago M√≥vil Venezuela - Red nacional interbancaria</p>
                </div>
                
                <div class="payment-details">
                  <div class="detail-item">
                    <label>N√∫mero de tel√©fono:</label>
                    <div class="copy-field">
                      <span class="mobile-number">0414-123-4567</span>
                      <button class="copy-btn" onclick="copyToClipboard('0414-123-4567')">üìã</button>
                    </div>
                  </div>
                  
                  <div class="detail-item">
                    <label>C√©dula:</label>
                    <div class="copy-field">
                      <span class="cedula">V-12.345.678</span>
                      <button class="copy-btn" onclick="copyToClipboard('V-12.345.678')">üìã</button>
                    </div>
                  </div>
                  
                  <div class="detail-item">
                    <label>Banco:</label>
                    <span class="detail-value">Banesco</span>
                  </div>
                  
                  <div class="detail-item">
                    <label>Monto a enviar:</label>
                    <span class="detail-value total-amount" id="mobileAmount">$0.00</span>
                  </div>
                </div>
                
                <div class="payment-instructions">
                  <h4>üìù Instrucciones:</h4>
                  <ol>
                    <li>Copia el n√∫mero de tel√©fono y c√©dula</li>
                    <li>Abre la app de tu banco</li>
                    <li>Selecciona "Pago M√≥vil"</li>
                    <li>Ingresa los datos copiados</li>
                    <li>Confirma el monto exacto</li>
                    <li>Haz clic en "Ya pagu√©" y espera confirmaci√≥n</li>
                  </ol>
                </div>
              </div>
            </div>

            <!-- Bot√≥n Ya Pagu√© -->
            <div class="payment-confirmation">
              <button class="btn-paid" id="confirmPayment">
                <span class="btn-icon">‚úÖ</span>
                <span class="btn-text">Ya pagu√©</span>
              </button>
              <p class="confirmation-note">Tu pago ser√° verificado en los pr√≥ximos minutos</p>
            </div>
          </div>

          <!-- T√©rminos y condiciones -->
          <div class="checkout-section">
            <div class="terms-section">
              <label class="custom-checkbox">
                <input type="checkbox" id="acceptTerms" required>
                <span class="checkmark"></span>
                <span class="checkbox-text">
                  Acepto los <a href="/terminos-condiciones" class="terms-link">t√©rminos y condiciones</a> y la <a href="/aviso-privacidad" class="terms-link">pol√≠tica de privacidad</a>
                </span>
              </label>
            </div>
          </div>

        </div>

        <!-- Columna derecha - Resumen del pedido -->
        <div class="checkout-sidebar">
          
          <!-- Resumen del pedido -->
          <div class="order-summary">
            <h2 class="summary-title">
              <span class="summary-icon">üõí</span>
              Resumen del Pedido
            </h2>
            
            <!-- Lista de cursos -->
            <div class="courses-list" id="coursesList">
              <!-- Los cursos se cargar√°n din√°micamente desde el carrito -->
            </div>
            
            <!-- Totales -->
            <div class="order-totals">
              <div class="total-row">
                <span class="total-label">Subtotal:</span>
                <span class="total-value" id="subtotal">$0.00</span>
              </div>
              <div class="total-row">
                <span class="total-label">Descuento:</span>
                <span class="total-value discount" id="discount">-$0.00</span>
              </div>
              <div class="total-row total-final">
                <span class="total-label">Total:</span>
                <span class="total-value" id="total">$0.00</span>
              </div>
            </div>
          </div>


        </div>
      </div>
    </div>
  </section>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    console.log('üõí Inicializando p√°gina de checkout...');
    
    // Obtener cursos del carrito desde localStorage
    const cartItems = JSON.parse(localStorage.getItem('rojasfitt_cart')) || [];
    
    if (cartItems.length === 0) {
      // Si no hay items en el carrito, redirigir a cursos
      alert('Tu carrito est√° vac√≠o. Agrega algunos cursos antes de proceder al checkout.');
      window.location.href = '/cursos';
      return;
    }
    
    // Limpiar carrito visual si est√° disponible
    if (typeof window.cart !== 'undefined') {
      window.cart.updateCartDisplay();
      window.cart.updateCartIcon();
    }
    
    // Cargar cursos en el resumen
    loadOrderSummary(cartItems);
    
    // Configurar a√±os de expiraci√≥n de tarjeta (solo si existe)
    try {
      setupCardExpirationYears();
    } catch (error) {
      console.log('‚ö†Ô∏è Error configurando a√±os de tarjeta:', error);
    }
    
    // Configurar m√©todos de pago
    setTimeout(() => {
      try {
        setupPaymentMethods();
      } catch (error) {
        console.log('‚ö†Ô∏è Error configurando m√©todos de pago:', error);
      }
    }, 100);
    
    // Configurar formulario de pago (solo si existe)
    try {
      setupPaymentForm();
    } catch (error) {
      console.log('‚ö†Ô∏è Error configurando formulario de pago:', error);
    }
    
    // Configurar bot√≥n de compra
    try {
      setupCheckoutButton();
    } catch (error) {
      console.log('‚ö†Ô∏è Error configurando bot√≥n de compra:', error);
    }
    
    console.log('‚úÖ Checkout inicializado correctamente');
  });

  function loadOrderSummary(cartItems) {
    const coursesList = document.getElementById('coursesList');
    const subtotalEl = document.getElementById('subtotal');
    const totalEl = document.getElementById('total');
    
    let subtotal = 0;
    let html = '';
    
    cartItems.forEach(item => {
      subtotal += item.price;
      html += `
        <div class="course-item">
          <div class="course-image">
            <img src="${item.image}" alt="${item.title}">
          </div>
          <div class="course-info">
            <h4 class="course-title">${item.title}</h4>
            <p class="course-category">${item.category}</p>
            <span class="course-price">$${item.price.toFixed(2)}</span>
          </div>
        </div>
      `;
    });
    
    coursesList.innerHTML = html;
    
    // Calcular totales
    const discount = subtotal > 100 ? subtotal * 0.1 : 0; // 10% de descuento si supera $100
    const total = subtotal - discount;
    
    // Actualizar UI
    subtotalEl.textContent = `$${subtotal.toFixed(2)}`;
    document.getElementById('discount').textContent = discount > 0 ? `-$${discount.toFixed(2)}` : '$0.00';
    totalEl.textContent = `$${total.toFixed(2)}`;
    
    // Actualizar montos en los m√©todos de pago
    const binanceAmount = document.getElementById('binanceAmount');
    const paypalAmount = document.getElementById('paypalAmount');
    const mobileAmount = document.getElementById('mobileAmount');
    
    if (binanceAmount) binanceAmount.textContent = `$${total.toFixed(2)}`;
    if (paypalAmount) paypalAmount.textContent = `$${total.toFixed(2)}`;
    if (mobileAmount) mobileAmount.textContent = `$${total.toFixed(2)}`;
    
    // Mostrar/ocultar descuento
    document.getElementById('discount').parentElement.style.display = discount > 0 ? 'flex' : 'none';
  }

  function setupCardExpirationYears() {
    const yearSelect = document.getElementById('cardYear');
    
    // Verificar que el elemento existe antes de usarlo
    if (!yearSelect) {
      console.log('‚ö†Ô∏è Elemento cardYear no encontrado - saltando configuraci√≥n');
      return;
    }
    
    const currentYear = new Date().getFullYear();
    
    for (let i = 0; i < 10; i++) {
      const year = currentYear + i;
      const option = document.createElement('option');
      option.value = year.toString().slice(-2);
      option.textContent = year;
      yearSelect.appendChild(option);
    }
    
    console.log('‚úÖ A√±os de tarjeta configurados');
  }

  function setupPaymentMethods() {
    console.log('üîß Configurando m√©todos de pago...');
    
    // Verificar que los formularios existen
    const binanceForm = document.getElementById('binanceForm');
    const paypalForm = document.getElementById('paypalForm');
    const mobileForm = document.getElementById('mobileForm');
    
    console.log('üìã Formularios encontrados:', {
      binance: !!binanceForm,
      paypal: !!paypalForm,
      mobile: !!mobileForm
    });
    
    // Funci√≥n para cambiar m√©todo de pago
    function switchPaymentMethod(methodType) {
      console.log('üîÑ Cambiando a m√©todo:', methodType);
      
      // Ocultar todos los formularios
      if (binanceForm) binanceForm.style.display = 'none';
      if (paypalForm) paypalForm.style.display = 'none';
      if (mobileForm) mobileForm.style.display = 'none';
      
      // Remover clase active de todos los m√©todos
      const allMethods = document.querySelectorAll('.payment-method');
      allMethods.forEach(m => m.classList.remove('active'));
      
      // Mostrar el formulario seleccionado y activar el m√©todo
      if (methodType === 'binance' && binanceForm) {
        binanceForm.style.display = 'block';
        document.querySelector('[data-method="binance"]').classList.add('active');
        console.log('‚úÖ Mostrando formulario Binance');
      } else if (methodType === 'paypal' && paypalForm) {
        paypalForm.style.display = 'block';
        document.querySelector('[data-method="paypal"]').classList.add('active');
        console.log('‚úÖ Mostrando formulario PayPal');
      } else if (methodType === 'mobile' && mobileForm) {
        mobileForm.style.display = 'block';
        document.querySelector('[data-method="mobile"]').classList.add('active');
        console.log('‚úÖ Mostrando formulario Pago M√≥vil');
      }
    }
    
    // Agregar event listeners a cada m√©todo
    const binanceBtn = document.querySelector('[data-method="binance"]');
    const paypalBtn = document.querySelector('[data-method="paypal"]');
    const mobileBtn = document.querySelector('[data-method="mobile"]');
    
    if (binanceBtn) {
      binanceBtn.addEventListener('click', function(e) {
        e.preventDefault();
        console.log('üñ±Ô∏è Binance clickeado');
        switchPaymentMethod('binance');
      });
      console.log('‚úÖ Event listener agregado a Binance');
    }
    
    if (paypalBtn) {
      paypalBtn.addEventListener('click', function(e) {
        e.preventDefault();
        console.log('üñ±Ô∏è PayPal clickeado');
        switchPaymentMethod('paypal');
      });
      console.log('‚úÖ Event listener agregado a PayPal');
    }
    
    if (mobileBtn) {
      mobileBtn.addEventListener('click', function(e) {
        e.preventDefault();
        console.log('üñ±Ô∏è Pago M√≥vil clickeado');
        switchPaymentMethod('mobile');
      });
      console.log('‚úÖ Event listener agregado a Pago M√≥vil');
    }
    
    console.log('‚úÖ M√©todos de pago configurados');
  }

  function setupPaymentForm() {
    const cardNumber = document.getElementById('cardNumber');
    const cardCvv = document.getElementById('cardCvv');
    
    // Verificar que los elementos existen
    if (!cardNumber || !cardCvv) {
      console.log('‚ö†Ô∏è Elementos de formulario de tarjeta no encontrados - saltando configuraci√≥n');
      return;
    }
    
    // Formatear n√∫mero de tarjeta
    cardNumber.addEventListener('input', function() {
      let value = this.value.replace(/\s/g, '').replace(/[^0-9]/gi, '');
      let formattedValue = value.match(/.{1,4}/g)?.join(' ') || value;
      this.value = formattedValue;
    });
    
    // Solo n√∫meros en CVV
    cardCvv.addEventListener('input', function() {
      this.value = this.value.replace(/[^0-9]/g, '');
    });
    
    console.log('‚úÖ Formulario de pago configurado');
  }

  function setupCheckoutButton() {
    const confirmPaymentBtn = document.getElementById('confirmPayment');
    const acceptTerms = document.getElementById('acceptTerms');
    
    confirmPaymentBtn.addEventListener('click', function() {
      // Validar t√©rminos y condiciones
      if (!acceptTerms.checked) {
        showCoolNotification('‚ö†Ô∏è T√©rminos y Condiciones', 'Debes aceptar los t√©rminos y condiciones para continuar con tu compra.', 'warning');
        return;
      }
      
      // Obtener m√©todo de pago seleccionado
      const selectedMethod = document.querySelector('.payment-method.active').dataset.method;
      
      // Procesar pago
      processPayment(selectedMethod);
    });
  }

  function validateCardForm() {
    const cardNumber = document.getElementById('cardNumber').value.replace(/\s/g, '');
    const cardName = document.getElementById('cardName').value.trim();
    const cardCvv = document.getElementById('cardCvv').value;
    const cardMonth = document.getElementById('cardMonth').value;
    const cardYear = document.getElementById('cardYear').value;
    
    if (cardNumber.length < 13) {
      alert('El n√∫mero de tarjeta debe tener al menos 13 d√≠gitos.');
      return false;
    }
    
    if (!cardName) {
      alert('Ingresa el nombre que aparece en la tarjeta.');
      return false;
    }
    
    if (cardCvv.length < 3) {
      alert('El CVV debe tener al menos 3 d√≠gitos.');
      return false;
    }
    
    if (!cardMonth || !cardYear) {
      alert('Selecciona la fecha de expiraci√≥n de la tarjeta.');
      return false;
    }
    
    return true;
  }

  async function processPayment(method) {
    const confirmBtn = document.getElementById('confirmPayment');
    const btnText = confirmBtn.querySelector('.btn-text');
    const btnIcon = confirmBtn.querySelector('.btn-icon');
    
    // Mostrar estado de carga
    btnText.textContent = 'Verificando...';
    btnIcon.textContent = '‚è≥';
    confirmBtn.disabled = true;
    
    try {
      console.log('üí≥ Confirmando pago con m√©todo:', method);
      
      // Obtener datos del carrito
      const cartItems = JSON.parse(localStorage.getItem('rojasfitt_cart')) || [];
      const subtotal = cartItems.reduce((sum, item) => sum + item.price, 0);
      const discount = subtotal > 100 ? subtotal * 0.1 : 0;
      const total = subtotal - discount;
      
      // Preparar datos de pago
      const paymentData = {
        paymentMethod: method,
        cartItems: cartItems,
        total: total,
        subtotal: subtotal,
        discount: discount,
        paymentConfirmed: true
      };
      
      // Agregar datos espec√≠ficos del m√©todo de pago
      if (method === 'binance') {
        paymentData.paymentData = {
          walletAddress: '0x742d35Cc6634C0532925a3b8D8C2E3C1a4c8e2f9',
          network: 'BSC',
          token: 'USDT',
          standard: 'BEP-20'
        };
      } else if (method === 'paypal') {
        paymentData.paymentData = {
          email: 'pagos@rojasfitt.com',
          concept: 'Cursos RojasFitt'
        };
      } else if (method === 'mobile') {
        paymentData.paymentData = {
          phone: '0414-123-4567',
          cedula: 'V-12.345.678',
          bank: 'Banesco'
        };
      }
      
      // Enviar confirmaci√≥n de pago a la API
      const response = await fetch('/api/checkout/process-payment', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify(paymentData)
      });
      
      const result = await response.json();
      
      if (response.ok && result.success) {
        // Pago confirmado
        console.log('‚úÖ Pago confirmado exitosamente:', result);
        
        alert(`¬°Pago confirmado! üéâ\n\nOrden #${result.orderId}\nTotal: $${result.total.toFixed(2)}\nM√©todo: ${method.toUpperCase()}\n\nTu compra ha sido confirmada. Recibir√°s un email con los detalles de acceso a tus cursos.`);
        
        // Limpiar carrito completamente
        localStorage.removeItem('rojasfitt_cart');
        
        // Tambi√©n limpiar el carrito visual si est√° disponible
        if (typeof window.cart !== 'undefined') {
          window.cart.forceClearCart();
          console.log('üõí Carrito limpiado visualmente');
        }
        
        // Cerrar el carrito si est√° abierto
        const cartOverlay = document.getElementById('cart-overlay');
        if (cartOverlay) {
          cartOverlay.classList.remove('show');
          document.body.style.overflow = '';
        }
        
        // Redirigir a p√°gina de confirmaci√≥n o cursos
        window.location.href = '/cursos';
        
      } else {
        // Error en la confirmaci√≥n
        console.error('‚ùå Error al confirmar pago:', result);
        alert(result.message || 'Error al confirmar el pago. Intenta de nuevo.');
        
        // Restaurar bot√≥n
        btnText.textContent = 'Ya pagu√©';
        btnIcon.textContent = '‚úÖ';
        confirmBtn.disabled = false;
      }
      
    } catch (error) {
      console.error('‚ùå Error al confirmar pago:', error);
      alert('Error de conexi√≥n. Intenta de nuevo.');
      
      // Restaurar bot√≥n
      btnText.textContent = 'Ya pagu√©';
      btnIcon.textContent = '‚úÖ';
      confirmBtn.disabled = false;
    }
  }

  // Funci√≥n para copiar al portapapeles
  function copyToClipboard(text) {
    navigator.clipboard.writeText(text).then(function() {
      // Mostrar notificaci√≥n cool de √©xito
      showCoolNotification('üìã ¬°Copiado!', 'La informaci√≥n se ha copiado al portapapeles correctamente.', 'success');
      console.log('üìã Texto copiado:', text);
    }).catch(function(err) {
      console.error('‚ùå Error al copiar:', err);
      showCoolNotification('‚ùå Error al Copiar', 'No se pudo copiar la informaci√≥n. Intenta seleccionar y copiar manualmente.', 'error');
    });
  }

  // Sistema de notificaciones cool
  function showCoolNotification(title, message, type = 'info') {
    // Crear contenedor de notificaci√≥n
    const notification = document.createElement('div');
    notification.className = `cool-notification cool-notification-${type}`;
    
    // Configurar colores seg√∫n el tipo
    const colors = {
      success: { bg: '#22c55e', icon: '‚úÖ', glow: 'rgba(34, 197, 94, 0.3)' },
      error: { bg: '#ef4444', icon: '‚ùå', glow: 'rgba(239, 68, 68, 0.3)' },
      warning: { bg: '#f59e0b', icon: '‚ö†Ô∏è', glow: 'rgba(245, 158, 11, 0.3)' },
      info: { bg: '#3b82f6', icon: '‚ÑπÔ∏è', glow: 'rgba(59, 130, 246, 0.3)' }
    };
    
    const config = colors[type] || colors.info;
    
    // Crear contenido de la notificaci√≥n
    notification.innerHTML = `
      <div class="cool-notification-content">
        <div class="cool-notification-header">
          <span class="cool-notification-icon">${config.icon}</span>
          <h3 class="cool-notification-title">${title}</h3>
          <button class="cool-notification-close" onclick="this.parentElement.parentElement.parentElement.remove()">√ó</button>
        </div>
        <p class="cool-notification-message">${message}</p>
        <div class="cool-notification-progress"></div>
      </div>
    `;
    
    // Estilos din√°micos
    notification.style.cssText = `
      position: fixed;
      top: 20px;
      right: 20px;
      background: linear-gradient(135deg, ${config.bg}, ${config.bg}dd);
      color: white;
      padding: 0;
      border-radius: 16px;
      box-shadow: 0 10px 30px ${config.glow}, 0 0 0 1px rgba(255,255,255,0.1);
      backdrop-filter: blur(10px);
      z-index: 10000;
      min-width: 320px;
      max-width: 400px;
      transform: translateX(100%);
      transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
      overflow: hidden;
    `;
    
    // Agregar al DOM
    document.body.appendChild(notification);
    
    // Animar entrada
    setTimeout(() => {
      notification.style.transform = 'translateX(0)';
    }, 100);
    
    // Iniciar barra de progreso
    const progressBar = notification.querySelector('.cool-notification-progress');
    progressBar.style.cssText = `
      height: 3px;
      background: rgba(255,255,255,0.3);
      width: 100%;
      position: relative;
      overflow: hidden;
    `;
    
    const progressFill = document.createElement('div');
    progressFill.style.cssText = `
      height: 100%;
      background: rgba(255,255,255,0.8);
      width: 100%;
      transform: translateX(-100%);
      transition: transform 5s linear;
    `;
    progressBar.appendChild(progressFill);
    
    setTimeout(() => {
      progressFill.style.transform = 'translateX(0)';
    }, 200);
    
    // Auto-remover despu√©s de 5 segundos
    setTimeout(() => {
      if (notification.parentElement) {
        notification.style.transform = 'translateX(100%)';
        setTimeout(() => {
          if (notification.parentElement) {
            notification.remove();
          }
        }, 400);
      }
    }, 5000);
    
    console.log(`üîî Notificaci√≥n cool mostrada: ${title}`);
  }

  // Hacer funci√≥n global
  window.copyToClipboard = copyToClipboard;
  window.showCoolNotification = showCoolNotification;
  
  // Funci√≥n de prueba para cambiar m√©todos de pago
  window.testPaymentMethod = function(method) {
    console.log('üß™ Probando cambio a:', method);
    const binanceForm = document.getElementById('binanceForm');
    const paypalForm = document.getElementById('paypalForm');
    const mobileForm = document.getElementById('mobileForm');
    
    // Ocultar todos
    if (binanceForm) binanceForm.style.display = 'none';
    if (paypalForm) paypalForm.style.display = 'none';
    if (mobileForm) mobileForm.style.display = 'none';
    
    // Mostrar el seleccionado
    if (method === 'binance' && binanceForm) {
      binanceForm.style.display = 'block';
      document.querySelector('[data-method="binance"]').classList.add('active');
      document.querySelector('[data-method="paypal"]').classList.remove('active');
      document.querySelector('[data-method="mobile"]').classList.remove('active');
    } else if (method === 'paypal' && paypalForm) {
      paypalForm.style.display = 'block';
      document.querySelector('[data-method="paypal"]').classList.add('active');
      document.querySelector('[data-method="binance"]').classList.remove('active');
      document.querySelector('[data-method="mobile"]').classList.remove('active');
    } else if (method === 'mobile' && mobileForm) {
      mobileForm.style.display = 'block';
      document.querySelector('[data-method="mobile"]').classList.add('active');
      document.querySelector('[data-method="binance"]').classList.remove('active');
      document.querySelector('[data-method="paypal"]').classList.remove('active');
    }
    
    console.log('‚úÖ Cambio completado a:', method);
  };
</script>

<style>
  /* =================================================================
     P√ÅGINA DE CHECKOUT - DISE√ëO CONSISTENTE
     ================================================================= */

  .checkout-page {
    min-height: 100vh;
    background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 100%);
    padding: 120px 0 60px;
  }

  .checkout-container {
    max-width: 1400px;
    margin: 0 auto;
    padding: 0 20px;
  }

  /* ===== HEADER DE LA P√ÅGINA ===== */
  .checkout-header {
    text-align: center;
    margin-bottom: 60px;
  }

  .checkout-breadcrumb {
    margin-bottom: 20px;
    font-size: 0.9rem;
    color: #737373;
  }

  .checkout-breadcrumb a {
    color: #99FF00;
    text-decoration: none;
    transition: color 0.3s ease;
  }

  .checkout-breadcrumb a:hover {
    color: #ffffff;
  }

  .checkout-breadcrumb span {
    margin: 0 10px;
  }

  .checkout-title {
    font-size: 3.5rem;
    font-weight: 900;
    color: #ffffff;
    margin-bottom: 10px;
    text-shadow: 0 0 20px rgba(255, 255, 255, 0.3);
  }

  .highlight-green {
    color: #99FF00;
    text-shadow: 0 0 15px rgba(153, 255, 0, 0.8), 0 0 30px rgba(153, 255, 0, 0.4);
  }

  .checkout-subtitle {
    font-size: 1.2rem;
    color: #e0e0e0;
    font-weight: 300;
  }

  /* ===== CONTENIDO PRINCIPAL ===== */
  .checkout-content {
    display: grid;
    grid-template-columns: 2fr 1fr;
    gap: 40px;
    align-items: start;
    position: relative;
  }

  /* ===== COLUMNA IZQUIERDA - FORMULARIO ===== */
  .checkout-main {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 20px;
    padding: 40px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .checkout-section {
    margin-bottom: 40px;
  }

  .checkout-section:last-child {
    margin-bottom: 0;
  }

  .section-title {
    display: flex;
    align-items: center;
    gap: 12px;
    font-size: 1.5rem;
    font-weight: 700;
    color: #99FF00;
    margin-bottom: 20px;
  }

  .section-icon {
    font-size: 1.8rem;
  }

  /* ===== INFORMACI√ìN DEL CLIENTE ===== */
  .client-info {
    background: rgba(153, 255, 0, 0.1);
    border-radius: 15px;
    padding: 20px;
    border: 1px solid rgba(153, 255, 0, 0.2);
  }

  .info-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .info-item:last-child {
    border-bottom: none;
  }

  .info-label {
    font-weight: 600;
    color: #e0e0e0;
  }

  .info-value {
    color: #99FF00;
    font-weight: 500;
  }

  /* ===== M√âTODOS DE PAGO ===== */
  .payment-methods {
    display: flex;
    flex-direction: column;
    gap: 15px;
    margin-bottom: 30px;
  }

  .payment-method {
    display: flex;
    align-items: center;
    gap: 15px;
    padding: 20px;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 15px;
    border: 2px solid transparent;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .payment-method:hover {
    background: rgba(255, 255, 255, 0.08);
    border-color: rgba(153, 255, 0, 0.3);
  }

  .payment-method.active {
    background: rgba(153, 255, 0, 0.1);
    border-color: #99FF00;
  }

  .payment-icon {
    font-size: 2rem;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: rgba(153, 255, 0, 0.2);
    border-radius: 12px;
  }

  .payment-info {
    flex: 1;
  }

  .payment-info h3 {
    font-size: 1.1rem;
    font-weight: 600;
    color: #ffffff;
    margin-bottom: 5px;
  }

  .payment-info p {
    font-size: 0.9rem;
    color: #e0e0e0;
  }

  .payment-check {
    font-size: 1.5rem;
    color: #99FF00;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .payment-method.active .payment-check {
    opacity: 1;
  }

  /* ===== FORMULARIO DE PAGO ===== */
  .payment-form {
    background: rgba(255, 255, 255, 0.03);
    border-radius: 15px;
    padding: 30px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin-bottom: 20px;
  }

  .form-row:last-child {
    margin-bottom: 0;
  }

  .form-group {
    display: flex;
    flex-direction: column;
  }

  .form-group label {
    font-size: 0.9rem;
    font-weight: 600;
    color: #e0e0e0;
    margin-bottom: 8px;
  }

  .form-group input,
  .form-group select {
    padding: 15px;
    background: rgba(255, 255, 255, 0.05);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 10px;
    color: #ffffff;
    font-size: 1rem;
    transition: all 0.3s ease;
  }

  .form-group input:focus,
  .form-group select:focus {
    outline: none;
    border-color: #99FF00;
    background: rgba(153, 255, 0, 0.1);
    box-shadow: 0 0 0 3px rgba(153, 255, 0, 0.2);
  }

  .form-group input::placeholder {
    color: #737373;
  }

  /* ===== TARJETAS DE INFORMACI√ìN DE PAGO ===== */
  .payment-info-card {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.08) 0%, rgba(255, 255, 255, 0.03) 100%);
    border-radius: 20px;
    padding: 30px;
    border: 1px solid rgba(255, 255, 255, 0.15);
    margin-bottom: 25px;
    backdrop-filter: blur(20px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
    transition: all 0.3s ease;
  }

  .payment-info-card:hover {
    transform: translateY(-2px);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
    border-color: rgba(153, 255, 0, 0.3);
  }

  .payment-header {
    margin-bottom: 25px;
    text-align: center;
  }

  .payment-header h3 {
    font-size: 1.4rem;
    font-weight: 800;
    color: #99FF00;
    margin-bottom: 10px;
    text-shadow: 0 0 10px rgba(153, 255, 0, 0.3);
  }

  .tech-info {
    font-size: 0.9rem;
    color: #a0a0a0;
    font-style: italic;
    margin: 0;
    background: rgba(153, 255, 0, 0.1);
    padding: 8px 16px;
    border-radius: 20px;
    display: inline-block;
  }

  .payment-details {
    margin-bottom: 25px;
    background: rgba(255, 255, 255, 0.03);
    border-radius: 15px;
    padding: 20px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .detail-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.08);
    transition: all 0.3s ease;
  }

  .detail-item:hover {
    background: rgba(153, 255, 0, 0.05);
    border-radius: 8px;
    padding-left: 10px;
    padding-right: 10px;
  }

  .detail-item:last-child {
    border-bottom: none;
  }

  .detail-item label {
    font-size: 1rem;
    font-weight: 700;
    color: #ffffff;
    min-width: 140px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .detail-value {
    font-size: 1rem;
    color: #99FF00;
    font-weight: 600;
    text-shadow: 0 0 5px rgba(153, 255, 0, 0.3);
  }

  .copy-field {
    display: flex;
    align-items: center;
    gap: 12px;
    flex: 1;
    justify-content: flex-end;
  }

  .wallet-address,
  .paypal-email,
  .mobile-number,
  .cedula {
    font-family: 'JetBrains Mono', 'Fira Code', 'Courier New', monospace;
    font-size: 0.9rem;
    color: #ffffff;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.15) 0%, rgba(255, 255, 255, 0.05) 100%);
    padding: 12px 16px;
    border-radius: 10px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    word-break: break-all;
    max-width: 250px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  .wallet-address:hover,
  .paypal-email:hover,
  .mobile-number:hover,
  .cedula:hover {
    background: linear-gradient(135deg, rgba(153, 255, 0, 0.2) 0%, rgba(153, 255, 0, 0.1) 100%);
    border-color: #99FF00;
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(153, 255, 0, 0.2);
  }

  .copy-btn {
    background: linear-gradient(135deg, rgba(153, 255, 0, 0.3) 0%, rgba(153, 255, 0, 0.1) 100%);
    border: 2px solid #99FF00;
    border-radius: 10px;
    padding: 12px 16px;
    color: #99FF00;
    cursor: pointer;
    font-size: 1.1rem;
    font-weight: 600;
    transition: all 0.3s ease;
    flex-shrink: 0;
    position: relative;
    overflow: hidden;
  }

  .copy-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s;
  }

  .copy-btn:hover::before {
    left: 100%;
  }

  .copy-btn:hover {
    background: linear-gradient(135deg, rgba(153, 255, 0, 0.4) 0%, rgba(153, 255, 0, 0.2) 100%);
    transform: translateY(-2px) scale(1.05);
    box-shadow: 0 6px 20px rgba(153, 255, 0, 0.3);
  }

  .copy-btn:active {
    transform: translateY(0) scale(0.98);
  }

  .total-amount {
    font-size: 1.2rem !important;
    font-weight: 800 !important;
    color: #22c55e !important;
    text-shadow: 0 0 10px rgba(34, 197, 94, 0.5) !important;
    background: linear-gradient(135deg, rgba(34, 197, 94, 0.2) 0%, rgba(34, 197, 94, 0.1) 100%) !important;
    padding: 8px 16px !important;
    border-radius: 10px !important;
    border: 1px solid rgba(34, 197, 94, 0.3) !important;
  }

  .payment-instructions {
    background: linear-gradient(135deg, rgba(153, 255, 0, 0.1) 0%, rgba(153, 255, 0, 0.05) 100%);
    border-radius: 15px;
    padding: 25px;
    border: 1px solid rgba(153, 255, 0, 0.3);
    box-shadow: 0 4px 16px rgba(153, 255, 0, 0.1);
  }

  .payment-instructions h4 {
    font-size: 1.1rem;
    font-weight: 700;
    color: #99FF00;
    margin-bottom: 15px;
    text-align: center;
    text-transform: uppercase;
    letter-spacing: 1px;
    text-shadow: 0 0 8px rgba(153, 255, 0, 0.3);
  }

  .payment-instructions ol {
    margin: 0;
    padding-left: 0;
    list-style: none;
    counter-reset: step-counter;
  }

  .payment-instructions li {
    font-size: 0.95rem;
    color: #ffffff;
    margin-bottom: 12px;
    line-height: 1.6;
    padding: 12px 16px 12px 50px;
    background: rgba(255, 255, 255, 0.05);
    border-radius: 10px;
    border-left: 4px solid #99FF00;
    position: relative;
    counter-increment: step-counter;
    transition: all 0.3s ease;
  }

  .payment-instructions li::before {
    content: counter(step-counter);
    position: absolute;
    left: 12px;
    top: 50%;
    transform: translateY(-50%);
    background: #99FF00;
    color: #000000;
    width: 24px;
    height: 24px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 700;
    font-size: 0.8rem;
    box-shadow: 0 2px 8px rgba(153, 255, 0, 0.3);
    z-index: 1;
  }

  .payment-instructions li:hover {
    background: rgba(153, 255, 0, 0.1);
    transform: translateX(5px);
    box-shadow: 0 4px 12px rgba(153, 255, 0, 0.2);
  }

  .payment-instructions li:last-child {
    margin-bottom: 0;
  }

  /* ===== BOT√ìN YA PAGU√â ===== */
  .payment-confirmation {
    text-align: center;
    margin-top: 20px;
  }

  .btn-paid {
    width: 100%;
    padding: 16px;
    background: linear-gradient(135deg, #22c55e, #16a34a);
    color: white;
    border: none;
    border-radius: 12px;
    font-size: 1.1rem;
    font-weight: 700;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    margin-bottom: 10px;
  }

  .btn-paid:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(34, 197, 94, 0.4);
  }

  .btn-paid:disabled {
    opacity: 0.7;
    cursor: not-allowed;
    transform: none;
  }

  .confirmation-note {
    font-size: 0.85rem;
    color: #737373;
    margin: 0;
    font-style: italic;
  }

  /* ===== NOTIFICACI√ìN DE COPIA ===== */
  .copy-notification {
    position: fixed;
    top: 20px;
    right: 20px;
    background: rgba(34, 197, 94, 0.9);
    color: white;
    padding: 12px 20px;
    border-radius: 8px;
    font-size: 0.9rem;
    font-weight: 600;
    z-index: 1000;
    animation: slideIn 0.3s ease;
  }

  @keyframes slideIn {
    from {
      transform: translateX(100%);
      opacity: 0;
    }
    to {
      transform: translateX(0);
      opacity: 1;
    }
  }

  /* ===== NOTIFICACIONES COOL ===== */
  .cool-notification-content {
    padding: 20px;
  }

  .cool-notification-header {
    display: flex;
    align-items: center;
    gap: 12px;
    margin-bottom: 8px;
  }

  .cool-notification-icon {
    font-size: 1.5rem;
    flex-shrink: 0;
  }

  .cool-notification-title {
    font-size: 1.1rem;
    font-weight: 700;
    margin: 0;
    flex: 1;
  }

  .cool-notification-close {
    background: none;
    border: none;
    color: white;
    font-size: 1.5rem;
    cursor: pointer;
    padding: 0;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: background 0.3s ease;
  }

  .cool-notification-close:hover {
    background: rgba(255, 255, 255, 0.2);
  }

  .cool-notification-message {
    font-size: 0.95rem;
    margin: 0;
    line-height: 1.4;
    opacity: 0.95;
  }

  .cool-notification-progress {
    margin-top: 12px;
    border-radius: 2px;
  }

  /* Animaciones para las notificaciones */
  @keyframes coolSlideIn {
    from {
      transform: translateX(100%) scale(0.8);
      opacity: 0;
    }
    to {
      transform: translateX(0) scale(1);
      opacity: 1;
    }
  }

  @keyframes coolSlideOut {
    from {
      transform: translateX(0) scale(1);
      opacity: 1;
    }
    to {
      transform: translateX(100%) scale(0.8);
      opacity: 0;
    }
  }

  .cool-notification {
    animation: coolSlideIn 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
  }

  .cool-notification-removing {
    animation: coolSlideOut 0.4s ease-in;
  }

  /* ===== T√âRMINOS Y CONDICIONES ===== */
  .terms-section {
    background: rgba(255, 255, 255, 0.03);
    border-radius: 15px;
    padding: 20px;
    border: 1px solid rgba(255, 255, 255, 0.1);
  }

  .terms-link {
    color: #99FF00;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    border-bottom: 1px solid transparent;
  }

  .terms-link:hover {
    color: #ffffff;
    border-bottom-color: #99FF00;
    text-shadow: 0 0 8px rgba(153, 255, 0, 0.5);
  }

  /* ===== COLUMNA DERECHA - RESUMEN ===== */
  .checkout-sidebar {
    position: sticky;
    top: 120px;
    z-index: 10;
    height: fit-content;
  }

  .order-summary {
    background: rgba(255, 255, 255, 0.05);
    border-radius: 8px;
    padding: 10px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
    margin-bottom: 10px;
  }

  .summary-title {
    display: flex;
    align-items: center;
    gap: 4px;
    font-size: 0.85rem;
    font-weight: 700;
    color: #99FF00;
    margin-bottom: 8px;
  }

  .summary-icon {
    font-size: 0.8rem;
  }

  /* ===== LISTA DE CURSOS ===== */
  .courses-list {
    margin-bottom: 8px;
  }

  .course-item {
    display: flex;
    gap: 6px;
    padding: 5px 0;
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
  }

  .course-item:last-child {
    border-bottom: none;
  }

  .course-image {
    width: 25px;
    height: 25px;
    border-radius: 4px;
    overflow: hidden;
    flex-shrink: 0;
  }

  .course-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .course-info {
    flex: 1;
  }

  .course-title {
    font-size: 0.65rem;
    font-weight: 600;
    color: #ffffff;
    margin-bottom: 1px;
    line-height: 1.0;
  }

  .course-category {
    font-size: 0.55rem;
    color: #99FF00;
    margin-bottom: 1px;
  }

  .course-price {
    font-size: 0.7rem;
    font-weight: 700;
    color: #22c55e;
  }

  /* ===== TOTALES ===== */
  .order-totals {
    border-top: 1px solid rgba(153, 255, 0, 0.3);
    padding-top: 6px;
  }

  .total-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 2px 0;
  }

  .total-row.total-final {
    border-top: 1px solid rgba(255, 255, 255, 0.2);
    padding-top: 5px;
    margin-top: 4px;
  }

  .total-label {
    font-size: 0.7rem;
    color: #e0e0e0;
  }

  .total-final .total-label {
    font-size: 0.8rem;
    font-weight: 700;
    color: #ffffff;
  }

  .total-value {
    font-size: 0.7rem;
    font-weight: 600;
    color: #ffffff;
  }

  .total-final .total-value {
    font-size: 0.9rem;
    font-weight: 700;
    color: #99FF00;
  }

  .total-value.discount {
    color: #22c55e;
  }


  /* ===== INFORMACI√ìN DE SEGURIDAD ===== */
  .security-info {
    display: flex;
    align-items: center;
    gap: 4px;
    justify-content: center;
    padding: 6px;
    background: rgba(34, 197, 94, 0.1);
    border-radius: 4px;
    border: 1px solid rgba(34, 197, 94, 0.2);
  }

  .security-icon {
    font-size: 0.7rem;
  }

  .security-info p {
    font-size: 0.6rem;
    color: #e0e0e0;
    margin: 0;
  }

  /* ===== RESPONSIVE DESIGN ===== */
  @media (max-width: 1200px) {
    .checkout-container {
      max-width: 1000px;
      padding: 0 30px;
    }
    
    .checkout-content {
      gap: 35px;
    }
  }

  @media (max-width: 1024px) {
    .checkout-content {
      grid-template-columns: 1fr;
      gap: 30px;
    }
    
    .checkout-sidebar {
      position: sticky;
      top: 100px;
      z-index: 10;
    }
    
    .payment-info-card {
      padding: 25px;
    }
    
    .detail-item {
      flex-direction: column;
      align-items: flex-start;
      gap: 10px;
    }
    
    .detail-item label {
      min-width: auto;
      margin-bottom: 5px;
    }
    
    .copy-field {
      width: 100%;
      justify-content: space-between;
    }
  }

  @media (max-width: 768px) {
    .checkout-page {
      padding: 100px 0 40px;
    }
    
    .checkout-container {
      padding: 0 20px;
    }
    
    .checkout-title {
      font-size: 2.5rem;
    }
    
    .checkout-main {
      padding: 30px 25px;
    }
    
    .order-summary {
      padding: 25px;
    }
    
    .form-row {
      grid-template-columns: 1fr;
      gap: 15px;
    }
    
    .payment-method {
      padding: 18px;
      flex-direction: column;
      text-align: center;
      gap: 12px;
    }
    
    .payment-icon {
      width: 60px;
      height: 60px;
      font-size: 2.5rem;
    }
    
    .payment-info h3 {
      font-size: 1.2rem;
    }
    
    .payment-info p {
      font-size: 1rem;
    }
    
    .btn-paid {
      padding: 20px;
      font-size: 1.1rem;
    }
    
    .checkout-sidebar {
      position: sticky;
      top: 80px;
      z-index: 10;
    }
    
    .payment-info-card {
      padding: 20px;
    }
    
    .payment-header h3 {
      font-size: 1.2rem;
    }
    
    .tech-info {
      font-size: 0.8rem;
      padding: 6px 12px;
    }
    
    .wallet-address,
    .paypal-email,
    .mobile-number,
    .cedula {
      font-size: 0.8rem;
      padding: 10px 12px;
      max-width: 200px;
    }
    
    .copy-btn {
      padding: 10px 14px;
      font-size: 1rem;
    }
    
    .payment-instructions {
      padding: 20px;
    }
    
    .payment-instructions li {
      font-size: 0.9rem;
      padding: 10px 14px 10px 45px;
    }
  }

  @media (max-width: 480px) {
    .checkout-page {
      padding: 80px 0 30px;
    }
    
    .checkout-container {
      padding: 0 15px;
    }
    
    .checkout-title {
      font-size: 2rem;
    }
    
    .checkout-main {
      padding: 25px 20px;
    }
    
    .order-summary {
      padding: 20px;
    }
    
    .checkout-section {
      margin-bottom: 30px;
    }
    
    .section-title {
      font-size: 1.3rem;
    }
    
    .payment-method {
      padding: 15px;
    }
    
    .payment-icon {
      width: 50px;
      height: 50px;
      font-size: 2rem;
    }
    
    .payment-info h3 {
      font-size: 1.1rem;
    }
    
    .payment-info p {
      font-size: 0.9rem;
    }
    
    .payment-info-card {
      padding: 18px;
    }
    
    .payment-header h3 {
      font-size: 1.1rem;
    }
    
    .detail-item {
      padding: 12px 0;
    }
    
    .detail-item label {
      font-size: 0.9rem;
    }
    
    .detail-value {
      font-size: 0.9rem;
    }
    
    .wallet-address,
    .paypal-email,
    .mobile-number,
    .cedula {
      font-size: 0.75rem;
      padding: 8px 10px;
      max-width: 150px;
    }
    
    .copy-btn {
      padding: 8px 12px;
      font-size: 0.9rem;
    }
    
    .payment-instructions {
      padding: 18px;
    }
    
    .payment-instructions h4 {
      font-size: 1rem;
    }
    
    .payment-instructions li {
      font-size: 0.85rem;
      padding: 8px 12px 8px 40px;
    }
    
    .btn-paid {
      padding: 18px;
      font-size: 1rem;
    }
    
    .checkout-sidebar {
      position: sticky;
      top: 70px;
      z-index: 10;
    }
  }

  @media (max-width: 360px) {
    .checkout-container {
      padding: 0 10px;
    }
    
    .checkout-title {
      font-size: 1.8rem;
    }
    
    .checkout-main {
      padding: 20px 15px;
    }
    
    .order-summary {
      padding: 15px;
    }
    
    .payment-info-card {
      padding: 15px;
    }
    
    .wallet-address,
    .paypal-email,
    .mobile-number,
    .cedula {
      max-width: 120px;
      font-size: 0.7rem;
    }
    
  .copy-btn {
    padding: 6px 10px;
    font-size: 0.8rem;
  }
}

/* ===== MEJORAS ADICIONALES ===== */
/* Animaciones de entrada */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.checkout-section {
  animation: fadeInUp 0.6s ease-out;
}

.payment-info-card {
  animation: slideInRight 0.8s ease-out;
}

/* Efectos de hover mejorados */
.payment-method:hover .payment-icon {
  transform: scale(1.1) rotate(5deg);
  transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.payment-method:hover .payment-info h3 {
  color: #99FF00;
  text-shadow: 0 0 10px rgba(153, 255, 0, 0.5);
  transition: all 0.3s ease;
}

/* Mejoras en el bot√≥n de pago */
.btn-paid {
  position: relative;
  overflow: hidden;
}

.btn-paid::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.6s;
}

.btn-paid:hover::before {
  left: 100%;
}

/* Efectos de scroll suave */
html {
  scroll-behavior: smooth;
}

/* Mejoras en las notificaciones */
.cool-notification {
  backdrop-filter: blur(20px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Efectos de focus mejorados */
.copy-btn:focus,
.btn-paid:focus {
  outline: 2px solid #99FF00;
  outline-offset: 2px;
}

/* Mejoras en la accesibilidad */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Mejoras para modo oscuro */
@media (prefers-color-scheme: dark) {
  .payment-info-card {
    background: linear-gradient(135deg, rgba(0, 0, 0, 0.4) 0%, rgba(0, 0, 0, 0.2) 100%);
  }
}

/* Efectos de part√≠culas sutiles */
.payment-info-card::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(circle at 20% 80%, rgba(153, 255, 0, 0.03) 0%, transparent 50%),
              radial-gradient(circle at 80% 20%, rgba(153, 255, 0, 0.03) 0%, transparent 50%);
  pointer-events: none;
  border-radius: 20px;
}
</style>

---
// P√°gina de login de administrador
---

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Login - RojasFitt</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #e0e0e0;
        }

        .admin-container {
            background: rgba(255, 255, 255, 0.05);
            backdrop-filter: blur(10px);
            border: 1px solid rgba(153, 255, 0, 0.3);
            border-radius: 20px;
            padding: 40px;
            width: 100%;
            max-width: 400px;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
        }

        .admin-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .admin-title {
            font-size: 2rem;
            font-weight: bold;
            color: #99FF00;
            margin-bottom: 10px;
        }

        .admin-subtitle {
            color: #888;
            font-size: 0.9rem;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: #e0e0e0;
            font-weight: 600;
        }

        .form-group input {
            width: 100%;
            padding: 12px 16px;
            background: rgba(255, 255, 255, 0.1);
            border: 2px solid rgba(153, 255, 0, 0.3);
            border-radius: 8px;
            color: #e0e0e0;
            font-size: 1rem;
            transition: all 0.3s ease;
            outline: none;
        }

        .form-group input:focus {
            border-color: #99FF00;
            background: rgba(153, 255, 0, 0.1);
            box-shadow: 0 0 15px rgba(153, 255, 0, 0.3);
        }

        .password-container {
            position: relative;
            display: flex;
            align-items: center;
        }

        .password-container input {
            padding-right: 50px;
        }

        .toggle-password {
            position: absolute;
            right: 12px;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.2rem;
            color: #888;
            padding: 5px;
            border-radius: 4px;
            transition: all 0.3s ease;
            z-index: 1;
        }

        .toggle-password:hover {
            color: #99FF00;
            background: rgba(153, 255, 0, 0.1);
        }

        .admin-btn {
            width: 100%;
            padding: 12px;
            background: linear-gradient(135deg, #99FF00 0%, #7ACC00 100%);
            color: #0a0a0a;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 700;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .admin-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(153, 255, 0, 0.4);
        }

        .admin-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
            transform: none;
        }

        .message {
            padding: 12px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
            font-weight: 600;
        }

        .message.success {
            background: rgba(34, 197, 94, 0.2);
            color: #22c55e;
            border: 1px solid #22c55e;
        }

        .message.error {
            background: rgba(239, 68, 68, 0.2);
            color: #ef4444;
            border: 1px solid #ef4444;
        }

        .back-link {
            text-align: center;
            margin-top: 20px;
        }

        .back-link a {
            color: #99FF00;
            text-decoration: none;
            font-size: 0.9rem;
        }

        .back-link a:hover {
            text-decoration: underline;
        }
    </style>
</head>
<body>
    <div class="admin-container">
        <div class="admin-header">
            <h1 class="admin-title">üîê Admin Panel</h1>
            <p class="admin-subtitle">Acceso exclusivo para administradores</p>
        </div>

        <form id="adminLoginForm">
            <div class="form-group">
                <label for="username">Usuario o Email</label>
                <input type="text" id="username" name="username" required>
            </div>

            <div class="form-group">
                <label for="password">Contrase√±a</label>
                <div class="password-container">
                    <input type="password" id="password" name="password" required>
                    <button type="button" id="togglePassword" class="toggle-password">üëÅÔ∏è</button>
                </div>
            </div>

            <button type="submit" class="admin-btn" id="loginBtn">
                Iniciar Sesi√≥n
            </button>
        </form>

        <div class="back-link">
            <a href="/">‚Üê Volver al sitio principal</a>
        </div>
    </div>

    <script>
        // Funcionalidad para mostrar/ocultar contrase√±a
        document.getElementById('togglePassword')?.addEventListener('click', function() {
            const passwordInput = document.getElementById('password') as HTMLInputElement;
            const toggleBtn = this as HTMLButtonElement;
            
            if (passwordInput) {
                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    toggleBtn.textContent = 'üôà';
                } else {
                    passwordInput.type = 'password';
                    toggleBtn.textContent = 'üëÅÔ∏è';
                }
            }
        });

        document.getElementById('adminLoginForm')?.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const username = (document.getElementById('username') as HTMLInputElement)?.value;
            const password = (document.getElementById('password') as HTMLInputElement)?.value;
            const loginBtn = document.getElementById('loginBtn') as HTMLButtonElement;
            
            if (!username || !password || !loginBtn) return;
            
            // Mostrar estado de carga
            loginBtn.disabled = true;
            loginBtn.textContent = 'Iniciando sesi√≥n...';
            
            try {
                const response = await fetch('/api/admin/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ username, password })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Redirigir al panel de administraci√≥n
                    window.location.href = '/admin/dashboard';
                } else {
                    showMessage(result.error || 'Error al iniciar sesi√≥n', 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                showMessage('Error de conexi√≥n', 'error');
            } finally {
                loginBtn.disabled = false;
                loginBtn.textContent = 'Iniciar Sesi√≥n';
            }
        });
        
        function showMessage(message: string, type: string) {
            // Remover mensaje anterior si existe
            const existingMessage = document.querySelector('.message');
            if (existingMessage) {
                existingMessage.remove();
            }
            
            // Crear nuevo mensaje
            const messageEl = document.createElement('div');
            messageEl.className = `message ${type}`;
            messageEl.textContent = message;
            
            // Insertar antes del formulario
            const form = document.getElementById('adminLoginForm');
            if (form && form.parentNode) {
                form.parentNode.insertBefore(messageEl, form);
            }
            
            // Remover despu√©s de 5 segundos
            setTimeout(() => {
                if (messageEl.parentNode) {
                    messageEl.remove();
                }
            }, 5000);
        }
    </script>
</body>
</html>

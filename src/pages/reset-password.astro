---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Restablecer Contraseña - RojasFitt" description="Restablece tu contraseña usando el enlace enviado a tu email">
  <div class="reset-password-page">
    <div class="reset-password-content">
      <div class="reset-password-header">
        <h1 class="reset-password-title">Restablecer Contraseña</h1>
        <p class="reset-password-subtitle">Ingresa tu nueva contraseña</p>
      </div>

      <form class="reset-password-form" id="resetPasswordForm">
        <input type="hidden" id="token" name="token" value="">
        
        <div class="form-group">
          <label for="password" class="form-label">Nueva Contraseña</label>
          <input 
            type="password" 
            id="password" 
            name="password" 
            class="form-input" 
            placeholder="Tu nueva contraseña"
            required
            minlength="6"
          >
        </div>

        <div class="form-group">
          <label for="confirmPassword" class="form-label">Confirmar Contraseña</label>
          <input 
            type="password" 
            id="confirmPassword" 
            name="confirmPassword" 
            class="form-input" 
            placeholder="Confirma tu nueva contraseña"
            required
            minlength="6"
          >
        </div>

        <button type="submit" class="reset-password-btn" id="resetPasswordBtn">
          <span class="btn-text">Restablecer Contraseña</span>
          <span class="btn-loading" style="display: none;">Restableciendo...</span>
        </button>

        <div class="reset-password-links">
          <a href="/login" class="reset-password-link">← Volver al Login</a>
        </div>
      </form>

      <div id="successMessage" class="success-message" style="display: none;"></div>
      <div id="errorMessage" class="error-message" style="display: none;"></div>
    </div>
  </div>

  <style>
    .reset-password-page {
      min-height: 100vh;
      background: linear-gradient(135deg, #0a0a0a 0%, #1a1a1a 100%);
      padding: 60px 20px;
      position: relative;
      overflow: hidden;
    }

    .reset-password-page::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: radial-gradient(circle at 30% 20%, rgba(153, 255, 0, 0.1) 0%, transparent 50%);
      pointer-events: none;
    }

    .reset-password-content {
      max-width: 500px;
      margin: 0 auto;
      position: relative;
      z-index: 1;
    }

    .reset-password-header {
      text-align: center;
      margin-bottom: 50px;
    }

    .reset-password-title {
      font-size: 2.5rem;
      font-weight: 800;
      color: #99FF00;
      margin-bottom: 15px;
      text-shadow: 0 0 20px rgba(153, 255, 0, 0.3);
    }

    .reset-password-subtitle {
      color: #b0b0b0;
      font-size: 1.1rem;
    }

    .reset-password-form {
      background: rgba(255, 255, 255, 0.02);
      border-radius: 15px;
      padding: 40px;
      border: 1px solid rgba(153, 255, 0, 0.1);
    }

    .form-group {
      margin-bottom: 20px;
    }

    .form-label {
      display: block;
      color: #ffffff;
      font-weight: 600;
      margin-bottom: 8px;
      font-size: 0.9rem;
    }

    .form-input {
      width: 100%;
      padding: 12px 16px;
      background: rgba(255, 255, 255, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      border-radius: 10px;
      color: #ffffff;
      font-size: 1rem;
      transition: all 0.3s ease;
    }

    .form-input:focus {
      outline: none;
      border-color: #99FF00;
      box-shadow: 0 0 0 3px rgba(153, 255, 0, 0.1);
      background: rgba(255, 255, 255, 0.15);
    }

    .form-input::placeholder {
      color: #666;
    }

    .reset-password-btn {
      width: 100%;
      padding: 15px;
      background: linear-gradient(135deg, #99FF00, #7ACC00);
      color: #0a0a0a;
      border: none;
      border-radius: 10px;
      font-weight: 700;
      font-size: 1rem;
      cursor: pointer;
      transition: all 0.3s ease;
      box-shadow: 0 4px 15px rgba(153, 255, 0, 0.3);
      position: relative;
      overflow: hidden;
    }

    .reset-password-btn:hover {
      background: linear-gradient(135deg, #7ACC00, #99FF00);
      transform: translateY(-2px);
      box-shadow: 0 6px 25px rgba(153, 255, 0, 0.4);
    }

    .reset-password-btn:disabled {
      opacity: 0.7;
      cursor: not-allowed;
      transform: none;
    }

    .btn-loading {
      display: none;
    }

    .reset-password-links {
      text-align: center;
      margin-top: 20px;
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .reset-password-link {
      color: #99FF00;
      text-decoration: none;
      font-size: 0.9rem;
      transition: color 0.3s ease;
    }

    .reset-password-link:hover {
      color: #7ACC00;
    }

    .success-message {
      background: rgba(34, 197, 94, 0.1);
      border: 1px solid rgba(34, 197, 94, 0.3);
      color: #22c55e;
      padding: 12px;
      border-radius: 8px;
      margin-top: 15px;
      font-size: 0.9rem;
      text-align: center;
    }

    .error-message {
      background: rgba(239, 68, 68, 0.1);
      border: 1px solid rgba(239, 68, 68, 0.3);
      color: #ef4444;
      padding: 12px;
      border-radius: 8px;
      margin-top: 15px;
      font-size: 0.9rem;
      text-align: center;
    }

    /* Responsive */
    @media (max-width: 768px) {
      .reset-password-page {
        padding: 40px 15px;
      }
      
      .reset-password-content {
        max-width: 100%;
      }
      
      .reset-password-form {
        padding: 30px 20px;
      }
      
      .reset-password-title {
        font-size: 2rem;
      }
    }

    @media (max-width: 480px) {
      .reset-password-page {
        padding: 30px 10px;
      }
      
      .reset-password-form {
        padding: 25px 15px;
      }
      
      .reset-password-title {
        font-size: 1.8rem;
      }
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const resetPasswordForm = document.getElementById('resetPasswordForm');
      const resetPasswordBtn = document.getElementById('resetPasswordBtn');
      const btnText = resetPasswordBtn.querySelector('.btn-text');
      const btnLoading = resetPasswordBtn.querySelector('.btn-loading');
      const successMessage = document.getElementById('successMessage');
      const errorMessage = document.getElementById('errorMessage');
      const tokenInput = document.getElementById('token');

      // Obtener el token de la URL
      const urlParams = new URLSearchParams(window.location.search);
      const token = urlParams.get('token');
      
      if (!token) {
        errorMessage.textContent = 'Token de recuperación inválido o expirado';
        errorMessage.style.display = 'block';
        resetPasswordForm.style.display = 'none';
        return;
      }

      tokenInput.value = token;

      resetPasswordForm.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        const password = document.getElementById('password').value;
        const confirmPassword = document.getElementById('confirmPassword').value;

        if (password !== confirmPassword) {
          errorMessage.textContent = 'Las contraseñas no coinciden';
          errorMessage.style.display = 'block';
          return;
        }

        if (password.length < 6) {
          errorMessage.textContent = 'La contraseña debe tener al menos 6 caracteres';
          errorMessage.style.display = 'block';
          return;
        }
        
        // Mostrar estado de carga
        resetPasswordBtn.disabled = true;
        btnText.style.display = 'none';
        btnLoading.style.display = 'inline';
        successMessage.style.display = 'none';
        errorMessage.style.display = 'none';

        try {
          const response = await fetch('/api/auth/reset-password', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ token, password })
          });

          const result = await response.json();

          if (response.ok) {
            // Éxito
            successMessage.textContent = result.message || 'Contraseña restablecida exitosamente';
            successMessage.style.display = 'block';
            
            // Redirigir al login después de 3 segundos
            setTimeout(() => {
              window.location.href = '/login';
            }, 3000);
          } else {
            // Error
            errorMessage.textContent = result.message || 'Error al restablecer la contraseña';
            errorMessage.style.display = 'block';
          }
        } catch (error) {
          console.error('❌ Error en reset password:', error);
          errorMessage.textContent = 'Error de conexión. Intenta de nuevo.';
          errorMessage.style.display = 'block';
        } finally {
          // Restaurar estado del botón
          resetPasswordBtn.disabled = false;
          btnText.style.display = 'inline';
          btnLoading.style.display = 'none';
        }
      });
    });
  </script>
</Layout>
